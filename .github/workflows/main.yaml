name: Remote SSH Commands

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SSH_HOST: ${{ vars.DEPLOY_SERVER_SSH_HOST }}
      SSH_USER: ${{ vars.DEPLOY_SERVER_SSH_USER }}
      SSH_PORT: ${{ vars.DEPLOY_SERVER_SSH_PORT }}
      SSH_KEY: ${{ secrets.DEPLOY_SERVER_SSH_PRIVATE_KEY_BASE_64 }}
      REPO_PATH: ${{ vars.DEPLOY_SERVER_REPO_PATH }}
      REPO_SSH_URL: ${{ vars.REPO_SSH_URL }}
      PROJECT_NAME: ${{ vars.PROJECT_NAME }}
      EXPOSE_PORT: ${{ vars.EXPOSE_PORT }}
      DOCKER: "export PATH=$PATH:/usr/local/bin && docker"

    steps:
      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh
          echo "Host MyHost
            User $SSH_USER
            HostName $SSH_HOST
            Port $SSH_PORT
            StrictHostKeyChecking no
            IdentityFile ~/.ssh/id_rsa" > ~/.ssh/config
          echo "$SSH_KEY" | base64 --decode > ~/.ssh/id_rsa  
          chmod 600 ~/.ssh/id_rsa
          chmod 600 ~/.ssh/config
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Clean up before deploy
        run: |
          ssh MyHost "$DOCKER stop $PROJECT_NAME-container || true"
          ssh MyHost "$DOCKER rm $PROJECT_NAME-container || true"
          ssh MyHost "$DOCKER rmi $PROJECT_NAME || true"
          ssh MyHost "rm -rf $REPO_PATH || true"

      - name: Clone the repo on the remote machine, depth 1, on the path
        run: |
          ssh MyHost "git clone $REPO_SSH_URL --depth 1 $REPO_PATH"
          ssh MyHost "rm $REPO_PATH/deno.lock"

      - name: Use docker to build
        run: |
          ssh MyHost "cd $REPO_PATH && $DOCKER build -t $PROJECT_NAME ."

      - name: Run docker container
        run: |
          ssh MyHost "$DOCKER run -d --name $PROJECT_NAME-container -p $EXPOSE_PORT:4000 $PROJECT_NAME"

      - name: Clean up
        run: |
          ssh MyHost "rm -rf $REPO_PATH || true"
